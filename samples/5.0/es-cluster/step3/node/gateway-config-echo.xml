<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright 2007-2016, Kaazing Corporation. All rights reserved.

-->
<gateway-config xmlns="http://xmlns.kaazing.org/2015/11/gateway">

  <!--
  #############################################################################
  #############################################################################

                Kaazing WebSocket Gateway Configuration File

    See Kaazing Documentation for details: http://kaazing.com/documentation

  #############################################################################
  #############################################################################
  -->

  <properties>

    <property>
      <name>dmz.hostname</name>
      <value>localhost</value>
    </property>

    <property>
      <name>gateway.port</name>
      <value>8000</value>
    </property>

    <property>
      <name>echo.hostname</name>
      <value>localhost</value>
    </property>

    <property>
      <name>socks.port</name>
      <value>1080</value>
    </property>

  </properties>


  <service>
    <name>welcome-directory</name>
    <description>Directory service for welcome page</description>
    <accept>http://${echo.hostname}:${gateway.port}/</accept>

    <type>directory</type>

    <properties>
      <directory>/welcome</directory>
      <welcome-file>index.html</welcome-file>
      <error-pages-directory>/error-pages</error-pages-directory>
      <options>indexes</options>
      <location>
        <patterns>**/*</patterns>
        <cache-control>max-age=0</cache-control>
      </location>
    </properties>
  </service>


  <service>
    <name>echo proxy service</name>
    <description>Simple echo service proxy</description>
    <!--<accept>ws://${echo.hostname}:${gateway.port}/echo</accept>-->
    <accept>pipe://echo-proxy-pipe</accept>
    <connect>ws://localhost:8001/echo</connect>

    <type>proxy</type>
   
    <accept-options>
      <!--<http.transport>socks://${dmz.hostname}:${socks.port}</http.transport>-->
      <pipe.transport>socks://${dmz.hostname}:${socks.port}</pipe.transport>
      <socks.mode>reverse</socks.mode>
      <socks.retry.maximum.interval>1 second</socks.retry.maximum.interval>
      <socks.transport>wsn://${dmz.hostname}:${socks.port}/shield</socks.transport>
      <ws.inactivity.timeout>60 seconds</ws.inactivity.timeout>
    </accept-options>

    <!-- Restrict cross site constraints before running in production -->
    <cross-site-constraint>
      <!-- * is not secure for production javascript applications -->
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>

  <service>
    <name>echo service</name>
    <description>Simple echo service</description>
    <accept>ws://localhost:8001/echo</accept>

    <type>echo</type>

    <accept-options>
      <ws.bind>localhost:8001</ws.bind>
    </accept-options>
    
  </service>

  <service>
    <name>JMS Service</name>
    <accept>ws://${echo.hostname}:${gateway.port}/jms</accept>

    <type>jms</type>

    <properties>
      <connection.factory.name>ConnectionFactory</connection.factory.name>
      <context.lookup.topic.format>dynamicTopics/%s</context.lookup.topic.format>
      <context.lookup.queue.format>dynamicQueues/%s</context.lookup.queue.format>
      <env.java.naming.factory.initial>org.apache.activemq.jndi.ActiveMQInitialContextFactory</env.java.naming.factory.initial>
      <env.java.naming.provider.url>tcp://${echo.hostname}:61616</env.java.naming.provider.url>
    </properties>

    <realm-name>demo</realm-name>

    <!-- Restrict cross site constraints before running in production -->
    <cross-site-constraint>
      <!-- * is not secure for production javascript applications -->
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>


  <service>
    <name>AMQP Service</name>
    <accept>ws://${echo.hostname}:${gateway.port}/amqp</accept>
    <connect>tcp://${echo.hostname}:5672</connect>

    <type>amqp.proxy</type>

    <properties>
      <service.domain>${echo.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>

    <realm-name>demo</realm-name>

    <!-- Restrict cross site constraints before running in production -->
    <cross-site-constraint>
      <!-- * is not secure for production javascript applications -->
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>


  <security>

    <keystore>
      <type>JCEKS</type>
      <file>keystore.db</file>
      <password-file>keystore.pw</password-file>
    </keystore>

    <truststore>
      <file>truststore.db</file>
    </truststore>

    <realm>
      <name>demo</name>
      <description>Sample realm for file-based authentication</description>

      <authentication>
        <http-challenge-scheme>Application Basic</http-challenge-scheme>
        <login-modules>
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>

  </security>


</gateway-config>

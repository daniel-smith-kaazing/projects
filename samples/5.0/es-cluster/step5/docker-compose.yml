version: '2.0'

services: 
  es_echo1:
    build:
      context: node
    command: bin/gateway.start --config /kaazing-gateway/conf/gateway-config-echo.xml
    container_name: es_echo1
    hostname: echo1
    image: es_echo1
    # Uncomment the next two lines to get verbose logging on echo requests
    environment:
      GATEWAY_OPTS: -DLOG4J_CONFIG=/kaazing-gateway/conf/log4j-trace-transport-config.xml -Dgateway.hostname=echo1 -Dsocks.host=node1
      #GATEWAY_OPTS: -Dgateway.hostname=echo1 -Dsocks.host=node1
  # Dependencies are reversed.
    links:
     - es_node1:node1
    networks: 
      es_cluster-bridge: 
        ipv4_address: 172.13.0.2

  es_echo2:
    build:
      context: node
    command: bin/gateway.start --config /kaazing-gateway/conf/gateway-config-echo.xml
    container_name: es_echo2
    hostname: echo2
    image: es_echo2
    # Uncomment the next two lines to get verbose logging on echo requests
    environment:
      GATEWAY_OPTS: -DLOG4J_CONFIG=/kaazing-gateway/conf/log4j-trace-transport-config.xml -Dgateway.hostname=echo2 -Dsocks.host=node2
      #GATEWAY_OPTS: -Dgateway.hostname=echo2 -Dsocks.host=node2
  # Dependencies are reversed.
    links:
     - es_node2:node2
    networks: 
      es_cluster-bridge: 
        ipv4_address: 172.13.0.3

  # Once it is running:
  # docker exec es_node1 ifconfig | grep addr (to find the IP)
  # Edit /etc/hosts to put hostname node1 in IP
  #
  # Test in browser
  # Go to http://node1:8000 and test echo service.
  es_node1:
    build:
      context: node
    command: bin/gateway.start --config /kaazing-gateway/conf/gateway-config-echo-proxy.xml
    container_name: es_node1
    hostname: node1
    image: es_node1
    # Uncomment the next two lines to get verbose logging on echo requests
    environment:
      GATEWAY_OPTS: -DLOG4J_CONFIG=/kaazing-gateway/conf/log4j-trace-transport-ha-config.xml -Dgateway.hostname=node1 -Dsocks.host=node1 -Dcluster.ip1=172.13.0.4 -Dcluster.ip2=172.13.0.5 -Dbalancer.hostname=balancer
      #GATEWAY_OPTS: -Dgateway.hostname=node1 -Dsocks.host=node1 -Dcluster.ip1=172.13.0.4 -Dcluster.ip2=172.13.0.5  -Dbalancer.hostname=balancer
    networks: 
      es_cluster-bridge: 
        ipv4_address: 172.13.0.4

  # Once it is running:
  # docker exec es_node2 ifconfig | grep addr (to find the IP)
  # Edit /etc/hosts to put hostname node2 in IP
  #
  # Test in browser
  # Go to http://node2:8000 and test echo service.
  es_node2:
    build:
      context: node
    command: bin/gateway.start --config /kaazing-gateway/conf/gateway-config-echo-proxy.xml
    container_name: es_node2
    hostname: node2
    image: es_node2
    # Uncomment the next two lines to get verbose logging on echo requests
    environment:
      GATEWAY_OPTS: -DLOG4J_CONFIG=/kaazing-gateway/conf/log4j-trace-transport-ha-config.xml -Dgateway.hostname=node2 -Dsocks.host=node2 -Dcluster.ip1=172.13.0.5 -Dcluster.ip2=172.13.0.4 -Dbalancer.hostname=balancer
      #GATEWAY_OPTS: -Dgateway.hostname=node2 -Dsocks.host=node2 -Dcluster.ip1=172.13.0.5 -Dcluster.ip2=172.13.0.4 -Dbalancer.hostname=balancer
    networks: 
      es_cluster-bridge: 
        ipv4_address: 172.13.0.5

networks:
  es_cluster-bridge:
    driver: bridge
    ipam:
      config:
        - subnet: 172.13.0.0/16
          gateway: 172.13.0.1

